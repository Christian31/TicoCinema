@model TicoCinema.WebApplication.ViewModels.FoodInventaryViewModel
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>FoodHistory</h4>
        <hr />
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.FoodId, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.FoodId, (IEnumerable<SelectListItem>)ViewBag.FoodId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FoodId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Price, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.QuantityChanged, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.QuantityChanged, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.QuantityChanged, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
