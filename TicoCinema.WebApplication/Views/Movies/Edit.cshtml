@model TicoCinema.WebApplication.ViewModels.MovieViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Movies", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        <div class="row">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.MovieId)
            @Html.HiddenFor(model => model.ImagePath)

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.AudienceClassificationId, "Clasificación de la audiencia", htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.AudienceClassificationId, (IEnumerable<SelectListItem>)ViewBag.AudienceClassificationId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AudienceClassificationId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.ReleaseDate, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.DurationTime, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.DurationTime, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DurationTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.UploadedFile, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    <input type="file" id="UploadedFile" name="UploadedFile" class="form-control" />
                    @Html.ValidationMessageFor(model => model.UploadedFile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Categories, htmlAttributes: new { @class = "control-label col-md-8" })
                <div class="col-md-8">
                    @foreach (var category in Model.Categories)
                    {
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" name="SelectedCategories" value="@category.Value"
                                       @if (category.Selected) { <text> checked </text> } />
                                @category.Text
                            </label>
                        </div>
                    }
                    @Html.ValidationMessageFor(model => model.Categories, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver a la lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $('.datepicker').datepicker({
            todayHighlight: true
        });
    </script>
}
